# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      mongodb:
        # 왜 latest version은 실행이 되지 않는거지?
        image: mongo:4.4.6
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_HOST }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_INITDB_DATABASE: ${{ secrets.MONGO_DATABASE }}
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ BACKEND_WORKING_DIRECTORY }}

      - name: Check Directory Structure
        run: ls
        working-directory: ${{ BACKEND_WORKING_DIRECTORY }}

      - name: Build with Gradle Wrapper
        env:
          CLIENT_REDIRECT_LOGIN_SUCCESS: ${{ secrets.CLIENT_REDIRECT_LOGIN_SUCCESS }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          HEALTH_PORT: ${{ secrets.HEALTH_PORT }}
          JWT_ACCESS_EXPIRED_SECOND: ${{ secrets.JWT_ACCESS_EXPIRED_SECOND }}
          JWT_AUTH_TOKEN_EXPIRED_SECOND: ${{ secrets.JWT_AUTH_TOKEN_EXPIRED_SECOND }}
          JWT_REFRESH_EXPIRED_SECOND: ${{ secrets.JWT_REFRESH_EXPIRED_SECOND }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_PORT: ${{ secrets.MONGO_PORT }}
          MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          SECURITY_PERMITTED_URLS: ${{ secrets.SECURITY_PERMITTED_URLS }}
        run: ./gradlew clean test spotlessCheck
        working-directory: ${{ BACKEND_WORKING_DIRECTORY }}
